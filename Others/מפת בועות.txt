<div id="chartdiv"></div>

<script src="//www.amcharts.com/lib/4/core.js"></script>
<script src="//www.amcharts.com/lib/4/maps.js"></script>
<script src="//www.amcharts.com/lib/4/geodata/region/usa/txLow.js"></script>

<script>
var clinton = "#64b5f6"; var omalley = "#80deea"; var others = "#aaa"; var tie = "#999"; var biden = "#64b5f6"; var sanders = "#81d4fa"; var warren = "#80deea"; var buttigieg = "#80cbc4"; var klobuchar = "#a5d6a7";

var chart = am4core.create("chartdiv", am4maps.MapChart);
chart.geodata = am4geodata_region_usa_txLow;
chart.projection = new am4maps.projections.Mercator();

var polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());
polygonSeries.useGeodata = true;
polygonSeries.calculateVisualCenter = true;
polygonSeries.mapPolygons.template.fill = "#eee";
polygonSeries.dataSource.url = "//raw.githubusercontent.com/NirOzFiles/USA/Election/Results/2016/Primaries/Dem/TX.json";

polygonSeries.mapPolygons.template.tooltipText = "{name1}";
polygonSeries.dataSource.events.on("parseended", function(ev) { colorize(ev.target.data); });

var imageSeries = chart.series.push(new am4maps.MapImageSeries());
imageSeries.dataSource.url = "//raw.githubusercontent.com/NirOzFiles/USA/Election/Results/2016/Primaries/Dem/TX.json";
imageSeries.dataSource.events.on("parseended", function(ev) { colorize(ev.target.data); });
imageSeries.dataFields.value = "vote1";

function colorize(data) {
 for (var i = 0; i < data.length; i++) {
  for (var j = 0; j <= 6; j++) {
   if (data[i]["cand"+j] == "clinton") { data[i]["color"+j] = clinton; data[i]["name"+j] = "הילרי קלינטון"; }
   if (data[i]["cand"+j] == "omalley") { data[i]["color"+j] = omalley; data[i]["name"+j] = "מרטין אומאלי"; }
   if (data[i]["cand"+j] == "sanders") { data[i]["color"+j] = sanders; data[i]["name"+j] = "ברני סנדרס"; }
   if (data[i]["cand"+j] == "biden") { data[i]["color"+j] = biden; data[i]["name"+j] = "ג'ו ביידן"; }
   if (data[i]["cand"+j] == "buttigieg") { data[i]["color"+j] = buttigieg; data[i]["name"+j] = "פיט בוטיג'ג'"; }
   if (data[i]["cand"+j] == "warren") { data[i]["color"+j] = warren; data[i]["name"+j] = "אליזבת וורן"; }
   if (data[i]["cand"+j] == "klobuchar") { data[i]["color"+j] = klobuchar; data[i]["name"+j] = "איימי קלובשר"; }
   if (data[i]["cand"+j] == "yang") { data[i]["color"+j] = others; data[i]["name"+j] = "אנדרו יאנג"; }
   if (data[i]["cand"+j] == "others") { data[i]["color"+j] = others; data[i]["name"+j] = "אחרים";  }
  }
 }
}

var circle = imageSeries.mapImages.template.createChild(am4core.Circle);
circle.propertyFields.fill = "color1";
circle.tooltipText = "{name1}";
circle.strokeWidth = 1;
circle.stroke = am4core.color("#fff");

imageSeries.heatRules.push({
  "target": circle,
  "property": "radius",
  "min": 1,
  "max": 20,
  "dataField": "value"
})

imageSeries.mapImages.template.adapter.add("latitude", function(latitude, target) {
  var polygon = polygonSeries.getPolygonById(target.dataItem.dataContext.id);
  if(polygon){
    return polygon.visualLatitude;
   }
   return latitude;
})

imageSeries.mapImages.template.adapter.add("longitude", function(longitude, target) {
  var polygon = polygonSeries.getPolygonById(target.dataItem.dataContext.id);
  if(polygon){
    return polygon.visualLongitude;
   }
   return longitude;
})
</script>
